"use strict";

/* console.log(1);

setTimeout(() => {
  console.log("timeout");
}, 4000);

setTimeout(() => {
  console.log("timeout_4000");
}, 4000);

console.log(2); */

/* let k = 0;

function count() {
  for (let i = 0; i < 1e9; i++) {
    k++;
  }
  alert("done");
}

count(); */

setTimeout(() => {
  console.log(1);
}, 0); // 1) коли js баче 0, 1, 2, 3 - то автоматично підставляє 4млс, для сумсності з різними браузерами 2) спочатку все одно проходить через асинхронну частину попадає в web apis, потім в callback queue, а потім вже в call stack, якщо ця операція все одно буде асинхронною, то виконається швидше операція синхронна, також цей прийом(костиль) використовують, щоб він зразу спрацював після синхронного коду.

console.log(2); // синхронний код виконується зразу ж
